/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package consultas;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import persistencia.Query;
import src.Operaciones;
import src.Stemmer;

/**
 *
 * @author david
 */
public class View extends javax.swing.JFrame {

    /**
     * Creates new form View
     */
    Stemmer stemmer;
    ArrayList<String> stemmedDocument;
    Operaciones op;
    int i;
    String a, b;
    ArrayList<String> stemsArray = null;
    double queryMatrix[][];
    double normalisedQuery[][];
    Query queryArray[];
    ArrayList<Query> queryList;
    boolean stop;
    
    public View() {
        stemmer = new Stemmer();
        op = new Operaciones();
        op.SVD2();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jComboBox6 = new javax.swing.JComboBox();
        jComboBox7 = new javax.swing.JComboBox();
        jComboBox8 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Representaciones Mejoradas", "LSI" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Peso de términos", "Espacios vectoriales" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Producto interno", "Coseno", "Coeficientes de Dice", "Coeficientes de Jaccard", "Distancia Euclidiana", "Distanca Manhattan" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        jLabel1.setText("Primer documento");

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        jLabel2.setText("Segundo documento");

        jButton2.setText("Compare!");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(115, 115, 115)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(264, 264, 264)
                                    .addComponent(jLabel1))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(284, 284, 284)
                                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(98, 98, 98)
                                    .addComponent(jLabel2))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(128, 128, 128)
                                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(379, 379, 379)
                            .addComponent(jButton2))))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Comparar dos documentos", jPanel1);

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Producto interno", "Coseno", "Coeficientes de Dice", "Coeficientes de Jaccard", " " }));
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Peso de términos", "Espacios vectoriales" }));
        jComboBox7.setToolTipText("");

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Representaciones Mejoradas", "LSI" }));
        jComboBox8.setToolTipText("");
        jComboBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox8ActionPerformed(evt);
            }
        });

        jButton1.setText("Search!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(394, 394, 394)
                        .addComponent(jButton1)))
                .addContainerGap(333, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Comparar una consulta contra todos los documentos", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 907, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 566, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Lematizar un documento", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (jComboBox1.getSelectedIndex()==0)
            jComboBox2.enable();
        else
            jComboBox2.disable();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox6ActionPerformed

    private void jComboBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox8ActionPerformed
        if (jComboBox8.getSelectedIndex()==0)
            jComboBox7.enable();
        else
            jComboBox7.disable();
    }//GEN-LAST:event_jComboBox8ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTextArea2.setText("");
        int i;
        op.GenericStoredProc("","","consulta");
        op.GenericStoredProc("","","q");
        String consulta = jTextField1.getText();
        //Stemmer stemmer = new Stemmer();
        try {
            stemsArray = stemmer.Stem(consulta);
        } catch (Exception e) {
            jTextArea1.setText(e.getMessage());
        }
        op.createQuery(stemsArray);
        i = jComboBox8.getSelectedIndex();
        switch (i) {
            case 0: {//Representaciones mejoradas
                i = jComboBox7.getSelectedIndex();
                switch (i) {
                    case 0: { //Peso de terminos
                        i = jComboBox6.getSelectedIndex();
                        switch (i) {
                            case 0: //Producto interno
                                queryArray = op.SimDocCons("prodInternoPT", "consulta");
                                queryList = new ArrayList<Query>(Arrays.asList(queryArray));
                                Collections.sort(queryList);
                                for (int j = 0; j < queryList.size(); j++) {
                                    jTextArea2.append(queryList.get(j).getUri()+"\n");
                                }
                                break;
                            case 1://Coseno
                                queryArray = op.SimDocCons("cosenoPT", "consulta");
                                queryList = new ArrayList<Query>(Arrays.asList(queryArray));
                                Collections.sort(queryList);
                                for (int j = 0; j < queryList.size(); j++) {
                                    jTextArea2.append(queryList.get(j).getUri()+"\n");
                                }
                                break;
                            case 2://Dice
                                queryArray = op.SimDocCons("DicePT", "consulta");
                                queryList = new ArrayList<Query>(Arrays.asList(queryArray));
                                Collections.sort(queryList);
                                for (int j = 0; j < queryList.size(); j++) {
                                    jTextArea2.append(queryList.get(j).getUri()+"\n");
                                }
                                break;
                            case 3://Jaccard
                                queryArray = op.SimDocCons("jaccardPT", "consulta");
                                queryList = new ArrayList<Query>(Arrays.asList(queryArray));
                                Collections.sort(queryList);
                                for (int j = 0; j < queryList.size(); j++) {
                                    jTextArea2.append(queryList.get(j).getUri()+"\n");
                                }
                                break;
                        }//end switch
                        break;
                    }//end Peso de terminos
                    case 1: { //Espacios vectoriales
                        i = jComboBox6.getSelectedIndex();
                        switch (i) {
                            case 0: //Producto interno
                                queryArray = op.SimDocCons("prodInternoEV", "consulta");
                                queryList = new ArrayList<Query>(Arrays.asList(queryArray));
                                Collections.sort(queryList);
                                for (int j = 0; j < queryList.size(); j++) {
                                    jTextArea2.append(queryList.get(j).getUri()+"\n");
                                }
                                break;
                            case 1://Coseno
                                queryArray = op.SimDocCons("cosenoEV", "consulta");
                                queryList = new ArrayList<Query>(Arrays.asList(queryArray));
                                Collections.sort(queryList);
                                for (int j = 0; j < queryList.size(); j++) {
                                    jTextArea2.append(queryList.get(j).getUri()+"\n");
                                }
                                break;
                            case 2://Dice
                                queryArray = op.SimDocCons("DiceEV", "consulta");
                                queryList = new ArrayList<Query>(Arrays.asList(queryArray));
                                Collections.sort(queryList);
                                for (int j = 0; j < queryList.size(); j++) {
                                    jTextArea2.append(queryList.get(j).getUri()+"\n");
                                }
                                break;
                            case 3://Jaccard
                                queryArray = op.SimDocCons("jaccardEV", "consulta");
                                queryList = new ArrayList<Query>(Arrays.asList(queryArray));
                                Collections.sort(queryList);
                                for (int j = 0; j < queryList.size(); j++) {
                                    jTextArea2.append(queryList.get(j).getUri()+"\n");
                                }
                                break;
                        }//end switch
                        break;
                    }//end Espacios vectoriales
                    
                }//end switch                 
                break;
            }//end representaciones mejoradas
            case 1: {//LSI
                op.InsertQuery("select * from q");
                i = jComboBox6.getSelectedIndex();
                switch (i) {
                    case 0: //Producto interno
                        queryArray = op.SimDocCons("prodInternodtk", "q");
                        queryList = new ArrayList<Query>(Arrays.asList(queryArray));
                        Collections.sort(queryList);
                        for (int j = 0; j < queryList.size(); j++) {
                            jTextArea2.append(queryList.get(j).getUri()+"\n");
                        }
                        break;
                    case 1://Coseno
                        queryArray = op.SimDocCons("cosenodtk", "q");
                        queryList = new ArrayList<Query>(Arrays.asList(queryArray));
                        Collections.sort(queryList);
                        for (int j = 0; j < queryList.size(); j++) {
                            jTextArea2.append(queryList.get(j).getUri()+"\n");
                        }
                        break;
                    case 2://Dice
                        queryArray = op.SimDocCons("Dicedtk", "q");
                        queryList = new ArrayList<Query>(Arrays.asList(queryArray));
                        Collections.sort(queryList);
                        for (int j = 0; j < queryList.size(); j++) {
                            jTextArea2.append(queryList.get(j).getUri()+"\n");
                        }
                        break;
                    case 3://Jaccard
                        queryArray = op.SimDocCons("jaccarddtk", "q");
                        queryList = new ArrayList<Query>(Arrays.asList(queryArray));
                        Collections.sort(queryList);
                        for (int j = 0; j < queryList.size(); j++) {
                            jTextArea2.append(queryList.get(j).getUri()+"\n");
                        }
                        break;
                }//end switch
                break;
            }//end LSI           
        }//end switch
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String a=""+jComboBox4.getSelectedIndex();
        String b=""+jComboBox5.getSelectedIndex();
        int i = jComboBox1.getSelectedIndex();
        switch (i) {
            case 0: {  //Representaciones mejoradas
                i = jComboBox2.getSelectedIndex();
                switch (i) {
                    case 0: { //Peso de terminos
                        i = jComboBox3.getSelectedIndex();
                        switch (i) {
                            case 0://Producto interno
                                jTextArea1.setText(""+op.Sim2Doc(a, b, "prodInterno2PT"));
                                break;
                            case 1://Coseno
                                jTextArea1.setText(""+op.Sim2Doc(a, b, "coseno2PT"));
                                break;
                            case 2://Dice
                                jTextArea1.setText(""+op.Sim2Doc(a, b, "Dice2PT"));
                                break;
                            case 3://Jaccard
                                jTextArea1.setText(""+op.Sim2Doc(a, b, "jaccard2PT"));
                                break;
                            case 4://Euclidiana
                                jTextArea1.setText(""+op.Sim2Doc(a, b, "distEucl2PT"));
                                break;
                            case 5://Manhattan
                                jTextArea1.setText(""+op.Sim2Doc(a, b, "distManhattan2PT"));
                                break;
                        }//end switch
                        break;
                    }//end Peso de terminos
                    case 1: {//Espacios vectoriales
                        i = jComboBox3.getSelectedIndex();
                        switch (i) {
                            case 0: //Producto interno
                                jTextArea1.setText(""+op.Sim2Doc(a, b, "prodInterno2EV"));
                                break;
                            case 1://Coseno
                                jTextArea1.setText(""+op.Sim2Doc(a, b, "coseno2EV"));
                                break;
                            case 2://Dice
                                jTextArea1.setText(""+op.Sim2Doc(a, b, "Dice2EV"));
                                break;
                            case 3://Jaccard
                                jTextArea1.setText(""+op.Sim2Doc(a, b, "jaccard2EV"));
                                break;
                            case 4://Euclidiana
                                jTextArea1.setText(""+op.Sim2Doc(a, b, "distEucl2EV"));
                                break;
                            case 5://Manhattan
                                jTextArea1.setText(""+op.Sim2Doc(a, b, "distManhattan2EV"));
                                break;
                        }//end switch
                        break;
                    }//end Espacios vectoriales
                }//end switch
                break;
            }//end Representaciones mejoradas
            case 1: {//LSI
                i = jComboBox3.getSelectedIndex();
                switch (i) {
                    case 0: //Producto interno
                        jTextArea1.setText(""+op.Sim2Doc(a, b, "prodInterno2dtk"));
                        break;
                    case 1://Coseno
                        jTextArea1.setText(""+op.Sim2Doc(a, b, "coseno2dtk"));
                        break;
                    case 2://Dice
                        jTextArea1.setText(""+op.Sim2Doc(a, b, "Dice2dtk"));
                        break;
                    case 3://Jaccard
                        jTextArea1.setText(""+op.Sim2Doc(a, b, "jaccard2dtk"));
                        break;
                    case 4://Euclidiana
                        jTextArea1.setText(""+op.Sim2Doc(a, b, "distEucl2dtk"));
                        break;
                    case 5://Manhattan
                        jTextArea1.setText(""+op.Sim2Doc(a, b, "distManhattan2dtk"));
                        break;
                }//end switch
                break;
            }//end LSI
        }//end switch
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JComboBox jComboBox7;
    private javax.swing.JComboBox jComboBox8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
